name: Build lib

on:
  workflow_call:

jobs:
  build_lib:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install poetry
        run: pip install poetry

      - name: Make versions
        run: |
          chmod +x ./tools/version.sh
          ./tools/version.sh "${{ github.sha }}" "${{ secrets.DOCKER_IMAGE_NAME }}"
          echo "APP_VERSION=$(cat "./VERSION")" >> $GITHUB_ENV
          echo "DOCKER_IMAGES=$(cat "./DOCKER_IMAGES")" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-root --with dev

      - name: Build package
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          poetry build

      - name: Publish to pypi
        # The version in PyPI must follow the PEP 440 standard.
        # Semantic versioning is not supported by PyPI.
        # Therefore, only the release version is published.
        run: |
          if [[ ${{ github.ref }} =~ ^refs/tags/[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            poetry publish
          fi

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Create a github release
        run: gh release create "${{ env.APP_VERSION }}" ./dist/*
        env:
          GH_TOKEN: ${{ github.token }}
