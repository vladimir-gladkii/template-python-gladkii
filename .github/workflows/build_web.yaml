name: Build web

on:
  workflow_call:

jobs:
  build_web:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install poetry
        run: pip install poetry

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Make versions
        run: |
          chmod +x ./tools/version.sh
          ./tools/version.sh "${{ github.sha }}" "${{ secrets.DOCKER_IMAGE_NAME }}"
          echo "APP_VERSION=$(cat "./VERSION")" >> $GITHUB_ENV
          echo "DOCKER_IMAGES=$(cat "./DOCKER_IMAGES")" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ env.DOCKER_IMAGES }}

      - name: Create release dir
        run: mkdir -p ./release

      - name: Package helm chart
        run: |
          cd ./release
          helm package ../charts/app

      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-root --with dev

      - name: Generate openapi.yaml
        run: poetry run python ./tools/extract_openapi.py app.main:app --app-dir . --out ./release/openapi.yaml --app_version "${{ env.APP_VERSION }}"

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Create a github release
        run: gh release create "${{ env.APP_VERSION }}" ./release/*
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Generate index.yaml
        run: |
          chmod +x ./tools/helm_chart_repo.sh
          ./tools/helm_chart_repo.sh "${{ secrets.HELM_REPO_URL }}"

      - name: Publish to github pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ github.token }}
          publish_dir: .
          publish_branch: gh-pages
